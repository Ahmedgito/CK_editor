/**
 * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
 */
/**
 * @module ai/aireviewmode/ui/aireviewmodecustomcheckview
 */
import { type Locale, KeystrokeHandler, FocusTracker } from 'ckeditor5/src/utils.js';
import { View, ButtonView, LabeledFieldView, FocusCycler } from 'ckeditor5/src/ui.js';
import { AIReviewModePromptInputView } from './aireviemodepromptinputview.js';
import type { AIReviewCheckCustom } from '../model/aireviewcheckcustom.js';
export declare class AIReviewModeCustomCheckView extends View {
    /**
     * Tracks information about DOM focus in the form.
     */
    readonly focusTracker: FocusTracker;
    /**
     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.
     */
    readonly keystrokes: KeystrokeHandler;
    /**
     * Helps cycling over {@link #_focusables} in the form.
     */
    readonly focusCycler: FocusCycler;
    prompt: string;
    modelId: string;
    submitButtonView: ButtonView;
    cancelButtonView: ButtonView;
    promptInputView: LabeledFieldView<AIReviewModePromptInputView>;
    actionsFooterView: View;
    constructor(locale: Locale, check: AIReviewCheckCustom);
    /**
     * @inheritDoc
     */
    render(): void;
    get modelDefaultValue(): string;
    get modelDefaultLabel(): string;
    /**
     * Resets the form to its default state.
     */
    resetToDefault(): void;
    /**
     * Resets the form validation status.
     */
    resetFormValidationStatus(): void;
}
export type CustomCheckFormValidatorCallback = () => string | undefined;
