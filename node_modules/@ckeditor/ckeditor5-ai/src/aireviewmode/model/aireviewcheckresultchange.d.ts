/**
 * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
 */
import { type AIReviewCheckResult } from './aireviewcheckresult.js';
import { type AIReviewModeChangeData } from '../aireviewmodeediting.js';
import { type Operation } from 'ckeditor5/src/engine.js';
declare const AIReviewCheckResultChange_base: {
    new (): import("ckeditor5/src/utils.js").Observable;
    prototype: import("ckeditor5/src/utils.js").Observable;
};
/**
 * Represents a single change of the document that is a result of an review check run.
 */
export declare class AIReviewCheckResultChange extends /* #__PURE__ */ AIReviewCheckResultChange_base {
    /**
     * The id of the change.
     */
    readonly id: string;
    /**
     * Parent result of the change.
     *
     * Each change belongs to a single result, while each result can have multiple changes.
     * This is because the AI API returns multiple changes in a single result and the plugin
     * splits them into separate changes.
     */
    readonly parent: AIReviewCheckResult;
    /**
     * The status of the change.
     *
     * @observable
     */
    status: 'active' | 'accepted' | 'rejected';
    /**
     * Indicates whether the change is currently activated.
     *
     * @observable
     */
    isActivated: boolean;
    /**
     * Indicates whether the change has been rated.
     *
     * @observable
     */
    isRated: boolean;
    /**
     * Creates a new instance of the AIReviewCheckResult.
     */
    constructor(id: string, data: AIReviewModeChangeData, parent: AIReviewCheckResult);
    get contentDiffed(): string;
    get operations(): Array<Operation>;
    get operationsIsolated(): Array<Operation>;
}
export {};
