/**
 * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
 */
export declare const CAPABILITIES_MODEL_EVENT_NAMES: readonly ["capabilitiesUpdated"];
declare const AICapabilities_base: {
    new (): import("ckeditor5/src/utils.js").Emitter;
    prototype: import("ckeditor5/src/utils.js").Emitter;
};
/**
 * Manages the AI capabilities configuration and state.
 */
export declare class AICapabilities extends /* #__PURE__ */ AICapabilities_base {
    constructor();
    /**
     * Initializes the capabilities.
     */
    init(): void;
    /**
     * Resets the capabilities configuration to default state.
     */
    reset(): void;
    /**
     * Returns the current capabilities configuration.
     *
     * @returns The current capabilities configuration.
     */
    getCapabilitiesConfig(): AICapabilitiesConfig;
    /**
     * Converts capabilities configuration to request data format for API endpoint.
     * @returns The request data or undefined if no capabilities are enabled.
     */
    static getCapabilitiesRequestData(config: AICapabilitiesConfig | undefined): AICapabilitiesRequestData;
    /**
     * Toggles the web search enabled state.
     */
    toggleWebSearch(): void;
    /**
     * Toggles the reasoning enabled state.
     */
    toggleReasoning(): void;
}
export type AICapabilitiesUpdatedEvent = {
    name: 'capabilitiesUpdated';
    args: [AICapabilitiesConfig];
};
export type AICapabilitiesConfig = {
    isWebSearchEnabled: boolean;
    isReasoningEnabled: boolean;
};
export type AICapabilitiesRequestData = {
    webSearch?: object;
    reasoning?: object;
};
export {};
