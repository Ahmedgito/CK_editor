/**
 * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
 */
import { ListItemView } from 'ckeditor5/src/ui.js';
interface AIChatHistoryListItemViewConfig {
    title: string;
    createdAt: string;
    active: boolean;
    pinned?: boolean;
    id: string;
}
declare const AIChatHistoryListItemView_base: import("ckeditor5/src/utils.js").Mixed<typeof ListItemView, import("@ckeditor/ckeditor5-collaboration-core/src/utils/confirmmixin.js").ConfirmApi>;
export declare class AIChatHistoryListItemView extends AIChatHistoryListItemView_base {
    id: string;
    isVisible: boolean;
    pinned: boolean;
    isEdit: boolean;
    loadingState: string | null;
    showConfirm: (key: string, element: unknown) => Promise<void>;
    cancelConfirm: () => void;
    constructor(locale: any, config: AIChatHistoryListItemViewConfig);
    /**
     * Updates the title of the history item.
     */
    updateTitle(title: string): void;
    /**
     * Updates the loading state of the history item.
     */
    updateLoadingState(operation: string | null, isLoading: boolean): void;
    /**
     * Checks if the item matches the given regular expression.
     */
    isMatching(regExp: RegExp): {
        title: boolean;
    } | null;
    /**
     * Highlights text in the title view based on the given regular expression.
     */
    highlightText(regExp: RegExp | null): void;
}
export {};
